openapi: 3.0.0
info:
  title: Screening Service API
  description: |
    REST API for the Screening Service.
    
    The Screening Service handles candidate evaluation through resume parsing, skills matching,
    interest checks, phone assessments, and light screening capabilities.
  version: 1.0.0
  
servers:
  - url: https://api.cognitivehire.com/screening/v1
    description: Production server
  - url: https://api-test.cognitivehire.com/screening/v1
    description: Test server
  - url: http://localhost:8000/screening/v1
    description: Local development

tags:
  - name: resumes
    description: Resume management and parsing (Deep Screening)
  - name: skills
    description: Skills extraction and matching
  - name: interest-checks
    description: Interest check workflows
  - name: assessments
    description: Assessment management
  - name: light-screening
    description: Light screening via online candidate discovery
  - name: screening-decisions
    description: Screening type determination and management

paths:
  /resumes:
    post:
      summary: Upload a new resume
      tags:
        - resumes
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: Resume file (PDF, DOCX, etc.)
                candidate_id:
                  type: string
                  format: uuid
                  description: ID of the candidate
                job_id:
                  type: string
                  format: uuid
                  description: ID of the job
      responses:
        '201':
          description: Resume uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResumeResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /resumes/{resume_id}:
    get:
      summary: Get a resume by ID
      tags:
        - resumes
      parameters:
        - name: resume_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Resume found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResumeDetailResponse'
        '404':
          $ref: '#/components/responses/NotFound'
  
  /resumes/{resume_id}/parse:
    post:
      summary: Parse a resume
      tags:
        - resumes
      parameters:
        - name: resume_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '202':
          description: Resume parsing started
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParseResumeResponse'
        '404':
          $ref: '#/components/responses/NotFound'
  
  # Additional paths from the existing API spec...
  # ...abbreviated for brevity...

components:
  schemas:
    # Schema definitions from the existing API spec...
    # ...abbreviated for brevity...

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
    
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
    
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
